<?= $this->javascript("projax/js/prototype.js"); ?>
<?= $this->javascript("projax/js/scriptaculous.js"); ?>
<?= $this->javascript("projax/js/controls.js"); ?>
<?= $this->javascript("util.js"); ?>

<? //php ajax/scriptaculous
include("projax/projax.php");
$projax = new Projax();

$ajaxopts = array("url" => $this->url(array("controller" => "search", "action" => "facultysuggestor"), "", true),
		  "indicator" => "chair-loading", "value" => "id", "select" => "value",
		  "after_update_element" => "setChair", "callback" => "updateQuery"
		  );
$inputopts = array("size" => "55", "autocomplete" => "off", "id" => "chair_autocomplete");
?>
<script language="Javascript" type="text/javascript">
  // update autocomplete query to include former faculty setting
  function updateQuery(input, qs) {
  // qs comes in as advisor_autocomplete=value or faculty_autocomplete, convert...
  qs = qs.replace(/_autocomplete/, "");
  // if former setting is selected, add param to query
  if (qs.match("advisor") && $("former_chair").checked) qs += "&former=1";
  if (qs.match("faculty") && $("former_member").checked) qs += "&former=1";
  return qs;
}
  function setChair(text, li) {
  /* create a hidden input with faculty's netid, and display name */
      new Insertion.Bottom('chair_list', '<li id="'+li.id+'"><input type="hidden" name="chair[]" value="' + li.id + '"/>' + text.value + '<a class="remove" href="#" onClick="javascript:removeChair(\''+li.id+'\')">remove</a></li>');
      text.value = '';   // blank out suggestor for more entries
      Sortable.create("chair_list");
      // if former is selected, add optional affiliation
      if ($("former_chair").checked) 
	new Insertion.Bottom(li.id, ' <b>Current affiliation:</b> <input type="text" name="'+li.id + '_affiliation"> <i>(optional)</i>');
  }
  function addFaculty(text, li) {
    /* create a hidden input with faculty's netid, and display name */
    new Insertion.Bottom('faculty_list', '<li id="' + li.id +'"><input type="hidden" name="committee[]" value="' + li.id + '"/>' + text.value + '<a class="remove" href="#" onClick="Element.remove(\''+li.id+'\')">remove</a></li>');

    // make the faculty list sortable (needs to be updated when new fields are added)
    Sortable.create("faculty_list");
    text.value = '';	// blank out suggestor for more entries
    // if former was selected, add optional affiliation
    if ($("former_member").checked) 
      new Insertion.Bottom(li.id, ' <b>Current affiliation:</b> <input type="text" name="'+li.id + '_affiliation"> <i>(optional)</i>');

  }
 function removeChair(id) { Element.remove(id); Element.show("chair_autocomplete"); }

function addNonemory() {
  nonemory_count++;	// unique id for remove link
  new Insertion.Bottom('nonemory_list', "<tr id='nonemory_" + nonemory_count + "'>\n" +
    "\t<td><input type='text' name='nonemory_firstname[]'></td>\n" +
    "\t<td><input type='text' name='nonemory_lastname[]' ></td>\n" +
    "\t<td><input type='text' name='nonemory_affiliation[]' ></td>\n" +
    "\t<td><a href='#' onClick=\"Element.remove('nonemory_" + nonemory_count + "')\">remove</a>\n" + 
    "</tr>");
}

function addNonemoryChair() {
  nonemory_chair_count++;	// unique id for remove link
  new Insertion.Bottom('nonemory_chair_list', "<tr id='nonemory_chair_" + nonemory_chair_count + "'>\n" +
    "\t<td><input type='text' name='nonemory_chair_firstname[]'></td>\n" +
    "\t<td><input type='text' name='nonemory_chair_lastname[]' ></td>\n" +
    "\t<td><input type='text' name='nonemory_chair_affiliation[]' ></td>\n" +
    "\t<td><a href='#' onClick=\"Element.remove('nonemory_chair_" + nonemory_chair_count + "')\">remove</a>\n" +
    "</tr>");
}

</script>


<h1>Edit Committee/Adviser</h1>
<p><b><?= $this->etd->title() ?></b></p>


<p>Enter the last name of an Emory faculty member in the appropriate box.
    After the system retrieves a list of matching faculty, select the
    appropriate faculty.</p>
<ul>
  <li>If you make an incorrect selection, click remove and re-enter the name
      in the box.</li>
  <li>You can reorder the list of committee members by clicking on and
      dragging the names.</li>

</ul>



<div id="edit_faculty">
<? $chairs = $this->etd->mods->chair; ?>
<? $committeeMembers = $this->etd->mods->committee; ?>

<form method="post" id="fields_form"  action="<?= $this->url(array("action" => "savefaculty"))?>" onsubmit="disableButton('save')">
  <h2>Committee Chair(s) / Thesis Adviser</h2>
  <ul id="chair_list">
    <? foreach ($chairs as $chair): ?>
     <? if ($chair->id) : ?>
       <li id="<?= $chair->id ?>"><input type="hidden" name="chair[]" value="<?= $chair->id ?>"/>
	  <?= $chair->full ?>
	  <a class="remove" href="#" onClick="javascript:removeChair('<?= $chair->id ?>')">remove</a>

	  <? if (isset($chair->affiliation)): ?>
  	    <b>Current affiliation:</b>
                <input type="text" name="<?= $chair->id ?>_affiliation"
	       		value="<?= $chair->affiliation ?>">
	     <i>(optional)</i>
	  <? endif ?>

       </li>
     <? endif ?>
     <? endforeach ?>
   </ul>
  <? if (count($chairs) > 1): ?>
      <?= $projax->sortable_element("chair_list", array("url" => null)); ?>     
  <? endif ?>	      
	  
	  <div id="chair_autocomplete">
       <?= $this->formText("advisor_autocomplete", "",
			   array("size" => "55", "autocomplete" => "off")); ?>
	<div id="chair_choices" class="autocomplete"> </div>
	<script>new Ajax.Autocompleter("advisor_autocomplete", "chair_choices",
				       "<?= $this->url(array("controller" => "search",
 					"action" => "facultysuggestor"), "", true) ?>",
				       { indicator: "chair-loading",
					   value: "id",
					   select: "value",
					   afterUpdateElement: setChair,
					   callback: updateQuery});</script>
  	<span id="chair-loading" style="display:none;">Searching...</span>
	<p><input type="checkbox" name="former_chair" id="former_chair" value="0">
		search for former Emory faculty</p>		    
    </div>
    <hr/>
     <? if (count($this->etd->mods->nonemory_chair) > 1 ||
	(isset($this->etd->mods->nonemory_chair[0]) &&
	 $this->etd->mods->nonemory_chair[0]->first != "")) {
	  $has_nonemory_chair = true;
	} else {
	  $has_nonemory_chair = false;
	}
?>

    <? if (! $has_nonemory_chair): ?>
  <p>Is your Committee Chair / Thesis Advisor unaffiliated with Emory (does not include former Emory staff)?
     <a class="button" onClick="Element.show('nonemory_chair')">yes</a>
     </p>
<? endif ?>

 <? // FIXME: In the future rearrange form to be divided by emory and non-emory, 
     //use a chek-box to designate committee or chair ?  ?>
 <div id="nonemory_chair" <? if (! $has_nonemory_chair): ?> style="display:none" <? endif ?> >
 <h2>Non-Emory Committee Chair /Thesis Adviser</h2>
<table>
<tbody id="nonemory_chair_list">
     <? $nec_count = 0; ?>
     <!-- Build list of currently assigned non-emory chairs -->
     <tr><th>Last name</th> <th>First name</th> <th>Affiliation</th> </tr>
     <? foreach ($this->etd->mods->nonemory_chair as $nec) : ?>
         <tr id="nonemory_chair_<?= ++$nec_count; ?>">
             <td><?= $this->formText("nonemory_chair_lastname[]", $nec->last); ?></td>
             <td><?= $this->formText("nonemory_chair_firstname[]", $nec->first); ?></td>
             <td><?= $this->formText("nonemory_chair_affiliation[]", $nec->affiliation); ?></td>
             <td><a href="#" onClick="Element.remove('nonemory_chair_<?= $nec_count ?>')">remove</a>
         </tr>
     <? endforeach ?>

   <!-- add empty row for new entry -->
   <tr id="nonemory_chair_<?= ++$nec_count; ?>">
     <td><?= $this->formText("nonemory_chair_lastname[]"); ?></td>
     <td><?= $this->formText("nonemory_chair_firstname[]"); ?></td>
     <td><?= $this->formText("nonemory_chair_affiliation[]"); ?></td>
     <td><a href="#" onClick="Element.remove('nonemory_chair_<?= $nec_count ?>')">remove</a>
   </tr>
 <tbody>
</table>
<? /* pass the count to the javascript so inserted nodes can have unique ids for removal */ ?>
<script type="text/javascript">var nonemory_chair_count = <?= $nec_count ?>; </script>
<a href="#" onClick="javascript:addNonemoryChair()">add another</a>
</div>
<hr />
   <h2>Committee Members</h2>
   <ul id="faculty_list">
     <? foreach ($committeeMembers as $committee): ?>
	<? if ($committee->id) : ?>
	   <li id="<?= $committee->id ?>">
	      <input type="hidden" name="committee[]" value="<?= $committee->id ?>"/>
	      <?= $committee->full ?>
	      <a class="remove" href="#" onClick="Element.remove('<?= $committee->id ?>')">remove</a>

	  <? if (isset($committee->affiliation)): ?>
  	    <b>Current affiliation:</b>
	       <input type="text" name="<?= $committee->id ?>_affiliation"
	       value="<?= $committee->affiliation ?>"> <i>(optional)</i>
	  <? endif ?>

	      
	<? endif ?>
     <? endforeach ?>	
   </ul>

  <? if (count($committeeMembers) > 1): ?>
      <?= $projax->sortable_element("faculty_list", array("url" => null)); ?>     
  <? endif ?>	      

  <?= $this->formText("faculty_autocomplete", "",
		      array("size" => "55", "autocomplete" => "off")); ?>
	<div id="faculty_choices" class="autocomplete"> </div>
	<script>new Ajax.Autocompleter("faculty_autocomplete", "faculty_choices",
				       "<?= $this->url(array("controller" => "search",
 					"action" => "facultysuggestor"), "", true) ?>",
				       { indicator: "cm-loading",
					   value: "id",
					   select: "value",
					   afterUpdateElement: addFaculty,
					   callback: updateQuery});</script>
     <span id="cm-loading" style="display:none;">Searching...</span>
    <p><input type="checkbox" name="former_member" id="former_member" value="0">
		search for former Emory faculty</p>		    

 <hr/>
 <? if (count($this->etd->mods->nonemory_committee) > 1 || 
	(isset($this->etd->mods->nonemory_committee[0]) &&
	 $this->etd->mods->nonemory_committee[0]->first != "")) {
	  $has_nonemory = true;
	} else {
	  $has_nonemory = false;
	}
?>

<? if (! $has_nonemory): ?>  <?/*Auto scroll to end of page when yes button clicked*/?>
  <p>Do you have any Non-Emory Committee Members?
     <a class="button" onClick="Element.show('nonemory'); document.getElementById('save').scrollIntoView(true);">yes</a>
     </p>
<? endif ?>
     
 <div id="nonemory" <? if (! $has_nonemory): ?> style="display:none" <? endif ?> >     
 <h2>Non-Emory Committee Members</h2>
<table>
<tbody id="nonemory_list">						       
     <? $ne_count = 0; ?>
     <tr><th>Last name</th> <th>First name</th> <th>Affiliation</th></tr>
     <? foreach ($this->etd->mods->nonemory_committee as $ne) : ?>
       <tr id="nonemory_<?= ++$ne_count; ?>">
     <td><?= $this->formText("nonemory_lastname[]", $ne->last); ?></td>
     <td><?= $this->formText("nonemory_firstname[]", $ne->first); ?></td>
     <td><?= $this->formText("nonemory_affiliation[]", $ne->affiliation); ?></td>
     <td><a href="#" onClick="Element.remove('nonemory_<?= $ne_count ?>')">remove</a>
       </tr>
     <? endforeach ?>
   <tr id="nonemory_<?= ++$ne_count; ?>">
     <td><?= $this->formText("nonemory_lastname[]"); ?></td>
     <td><?= $this->formText("nonemory_firstname[]"); ?></td>
     <td><?= $this->formText("nonemory_affiliation[]"); ?></td>
     <td><a href="#" onClick="Element.remove('nonemory_<?= $ne_count ?>')">remove</a>
   </tr>
 <tbody>						       
</table>
<? /* pass the count to the javascript so inserted nodes can have unique ids for removal */ ?>
<script type="text/javascript">var nonemory_count = <?= $ne_count ?>; </script>		       
<a href="#" onClick="javascript:addNonemory()">add another</a>
</div>
     
<p><?= $this->formSubmit("save", "save", array("class" => "button")); ?></p>
</form>
						       
</div>
