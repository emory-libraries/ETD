<?php
/**
 * php wsdl types - autogenerated by php2wsdl
 * @category EmoryZF
 * @package Emory_Service
 * @subpackage Emory_Service_Persis
 */

class AddArkTarget {
  public $username; // string
  public $password; // string
  public $noid; // string
  public $qualifier; // string
  public $uri; // string
  public $proxy_id; // int
}

class EditTarget {
  public $username; // string
  public $password; // string
  public $purl; // string
  public $uri; // string
}

class AddArkTargetResponse {
  public $return; // string
}

class GeneratePurlResponse {
  public $return; // string
}

class GeneratePurl {
  public $username; // string
  public $password; // string
  public $uri; // string
  public $name; // string
  public $domain_id; // int
  public $proxy_id; // int
  public $external_system; // string
  public $external_system_key; // string
}

class EditTargetResponse {
  public $return; // string
}

class GenerateArk {
  public $username; // string
  public $password; // string
  public $uri; // string
  public $name; // string
  public $qualifier; // string
  public $domain_id; // int
  public $proxy_id; // int
  public $external_system; // string
  public $external_system_key; // string
}

class GenerateArkResponse {
  public $return; // string
}


/**
 * PersistentIdentifierService class
 *
 * @package Emory_Service
 * @subpackage Emory_Service_Persis
 */
class PersistentIdentifierService extends SoapClient {

  private static $classmap = array(
                                    'AddArkTarget' => 'AddArkTarget',
                                    'EditTarget' => 'EditTarget',
                                    'AddArkTargetResponse' => 'AddArkTargetResponse',
                                    'GeneratePurlResponse' => 'GeneratePurlResponse',
                                    'GeneratePurl' => 'GeneratePurl',
                                    'EditTargetResponse' => 'EditTargetResponse',
                                    'GenerateArk' => 'GenerateArk',
                                    'GenerateArkResponse' => 'GenerateArkResponse',
                                   );
  public function PersistentIdentifierService($wsdl = "http://pid.emory.edu/persis_api/service.wsdl", $options = array()) {
    foreach(self::$classmap as $key => $value) {
      if(!isset($options['classmap'][$key])) {
        $options['classmap'][$key] = $value;
      }
    }
    parent::__construct($wsdl, $options);
  }

  /**
   * Add a new target to an existing ark and return resolvable url for the new target
   *
   * @param AddArkTarget $AddArkTarget
   * @return AddArkTargetResponse
   */
  public function AddArkTarget(AddArkTarget $AddArkTarget) {
    return $this->__soapCall('AddArkTarget', array($AddArkTarget),       array(
            'uri' => 'pidman.soap_api.views.PersistentIdentifierService',
            'soapaction' => ''
           )
      );
  }

  /**
   * Update the target for an existing ark or purl and return the purl or qualified ark that
   * was updated
   *
   * @param EditTarget $EditTarget
   * @return EditTargetResponse
   */
  public function EditTarget(EditTarget $EditTarget) {
    return $this->__soapCall('EditTarget', array($EditTarget),       array(
            'uri' => 'pidman.soap_api.views.PersistentIdentifierService',
            'soapaction' => ''
           )
      );
  }

  /**
   * Create a new ark with a single target and return the full ark (with qualifier if specified)
   *
   *
   * @param GenerateArk $GenerateArk
   * @return GenerateArkResponse
   */
  public function GenerateArk(GenerateArk $GenerateArk) {
    return $this->__soapCall('GenerateArk', array($GenerateArk),       array(
            'uri' => 'pidman.soap_api.views.PersistentIdentifierService',
            'soapaction' => ''
           )
      );
  }

  /**
   * Generate a new purl for the specified url and return the purl
   *
   * @param GeneratePurl $GeneratePurl
   * @return GeneratePurlResponse
   */
  public function GeneratePurl(GeneratePurl $GeneratePurl) {
    return $this->__soapCall('GeneratePurl', array($GeneratePurl),       array(
            'uri' => 'pidman.soap_api.views.PersistentIdentifierService',
            'soapaction' => ''
           )
      );
  }

}
